{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaska\\\\ProgrammingStuff\\\\TestMOOCThings\\\\osa1.6 -1.12\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Statistics = props => {\n  if (props.stats[3] === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Feedback given\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"good\",\n        value: props.stats[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"neutral\",\n        value: props.stats[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"bad\",\n        value: props.stats[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"all\",\n        value: props.stats[3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"average\",\n        value: props.stats[4]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"positive\",\n        value: props.stats[5]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c = Statistics;\n\nconst StatisticLine = props => {\n  if (props.text !== \"positive\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [props.text, \" \", props.value]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [props.text, \" \", props.value * 100, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c2 = StatisticLine;\n\nconst SetGood = () => {};\n\n_c3 = SetGood;\n\nconst SetNeutral = () => {};\n\n_c4 = SetNeutral;\n\nconst SetBad = () => {};\n\n_c5 = SetBad;\n\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      text: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_c6 = Button;\n\nconst App = () => {\n  _s();\n\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const all = good + neutral + bad;\n  const average = (good - bad) / (good + neutral + bad);\n  const positive = good / (good + neutral + bad);\n  const statistics = [good, neutral, bad, all, average, positive];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setGood(good + 1),\n      good: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"neutral\",\n      handleClick: setBad(bad + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setBad(bad + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      stats: statistics\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c7 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Statistics\");\n$RefreshReg$(_c2, \"StatisticLine\");\n$RefreshReg$(_c3, \"SetGood\");\n$RefreshReg$(_c4, \"SetNeutral\");\n$RefreshReg$(_c5, \"SetBad\");\n$RefreshReg$(_c6, \"Button\");\n$RefreshReg$(_c7, \"App\");","map":{"version":3,"sources":["C:/Users/jaska/ProgrammingStuff/TestMOOCThings/osa1.6 -1.12/src/App.js"],"names":["React","useState","Statistics","props","stats","StatisticLine","text","value","SetGood","SetNeutral","SetBad","Button","handleClick","App","good","setGood","neutral","setNeutral","bad","setBad","all","average","positive","statistics"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nconst Statistics = (props) => {\n  if (props.stats[3] === 0) {\n    return (\n      <div>\n        <p>No Feedback given</p>\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        <StatisticLine text={\"good\"} value={props.stats[0]}/>\n        <StatisticLine text={\"neutral\"} value={props.stats[1]}/>\n        <StatisticLine text={\"bad\"} value={props.stats[2]}/>\n        <StatisticLine text={\"all\"} value={props.stats[3]}/>\n        <StatisticLine text={\"average\"} value={props.stats[4]}/>\n        <StatisticLine text={\"positive\"} value={props.stats[5]}/>\n      </div>\n    )\n  }\n}\n\nconst StatisticLine = (props) => {\n  if (props.text !== \"positive\") {\n    return (\n      <div>\n        <p>{props.text} {props.value}</p>\n      </div>\n    )\n  }\n  else {\n    return (\n      <div>\n        <p>{props.text} {props.value * 100}%</p>\n      </div>\n    )\n  }\n}\nconst SetGood = () => {\n\n}\nconst SetNeutral = () => {\n\n}\nconst SetBad = () => {\n\n}\nconst Button = (props) => {\n  return (\n    <div>\n      <button onClick={handleClick} text={props.text}>\n      \n      </button>\n    </div>\n  )\n}\nconst App = () => {\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const all = good + neutral + bad\n  const average = (good - bad) / (good + neutral + bad)\n  const positive = good / (good + neutral + bad)\n  const statistics = [good, neutral, bad , all , average, positive]\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button onClick={() => setGood(good + 1)}good/>\n      <Button text=\"neutral\" handleClick={setBad(bad + 1)} />\n      <Button onClick={() => setBad(bad + 1)}/>\n\n\n      <h1>statistics</h1>\n      <Statistics stats={statistics}/>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}