{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaska\\\\ProgrammingStuff\\\\TestMOOCThings\\\\osa1.6 -1.12\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Statistics = props => {\n  if (props.stats[3] === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Feedback given\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(StatisticLine, {\n              text: \"good\",\n              value: props.stats[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(StatisticLine, {\n              text: \"neutral\",\n              value: props.stats[1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(StatisticLine, {\n              text: \"bad\",\n              value: props.stats[2]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(StatisticLine, {\n              text: \"all\",\n              value: props.stats[3]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(StatisticLine, {\n              text: \"average\",\n              value: props.stats[4]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(StatisticLine, {\n              text: \"positive\",\n              value: props.stats[5]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c = Statistics;\n\nconst StatisticLine = props => {\n  if (props.text !== \"positive\") {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [props.text, \" \", props.value]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [props.text, \" \", props.value * 100, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 10\n      }, this)\n    }, void 0, false);\n  }\n};\n\n_c2 = StatisticLine;\n\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.handleClick,\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c3 = Button;\n\nconst App = () => {\n  _s();\n\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const all = good + neutral + bad;\n  const average = (good - bad) / (good + neutral + bad);\n  const positive = good / (good + neutral + bad);\n  const statistics = [good, neutral, bad, all, average, positive];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"good\",\n      handleClick: () => setGood(good + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"neutral\",\n      handleClick: () => setNeutral(neutral + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"bad\",\n      handleClick: () => setBad(bad + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      stats: statistics\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Statistics\");\n$RefreshReg$(_c2, \"StatisticLine\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["C:/Users/jaska/ProgrammingStuff/TestMOOCThings/osa1.6 -1.12/src/App.js"],"names":["React","useState","Statistics","props","stats","StatisticLine","text","value","Button","handleClick","App","good","setGood","neutral","setNeutral","bad","setBad","all","average","positive","statistics"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nconst Statistics = (props) => {\n  if (props.stats[3] === 0) {\n    return (\n      <div>\n        <p>No Feedback given</p>\n      </div>\n    )\n  } else {\n    return (\n      <table>\n        <tbody>\n          <tr>\n            <td><StatisticLine text={\"good\"} value={props.stats[0]} /></td>\n            </tr>\n          <tr>\n          <td><StatisticLine text={\"neutral\"} value={props.stats[1]} /></td>\n        </tr>\n        <tr>\n        <td><StatisticLine text={\"bad\"} value={props.stats[2]} /></td>\n        </tr>\n      <tr>\n        <td><StatisticLine text={\"all\"} value={props.stats[3]}/></td>\n      </tr >\n        <tr>\n        <td><StatisticLine text={\"average\"} value={props.stats[4]}/></td>\n          </tr >\n            <tr>\n        <td><StatisticLine text={\"positive\"} value={props.stats[5]}/></td>\n          </tr>\n        </tbody>\n      </table>\n    )\n  }\n}\n\nconst StatisticLine = (props) => {\n  if (props.text !== \"positive\") {\n    return (\n      <>\n          <p>{props.text} {props.value}</p>\n      </>  \n    )\n  }\n  else {\n    return (\n    <>\n         <p>{props.text} {props.value * 100}%</p>\n    </>\n\n    )\n  }\n}\nconst Button = (props) => {\n  return (\n    <>\n      <button onClick={props.handleClick}>\n      {props.text}\n      </button>\n    </>\n  )\n}\nconst App = () => {\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const all = good + neutral + bad\n  const average = (good - bad) / (good + neutral + bad)\n  const positive = good / (good + neutral + bad)\n  const statistics = [good, neutral, bad , all , average, positive]\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button text=\"good\" handleClick={() => setGood(good + 1)} />\n      <Button text=\"neutral\" handleClick={() => setNeutral(neutral + 1)} />\n      <Button text=\"bad\" handleClick={() => setBad(bad + 1)} />\n      {/* <Button onClick={() => setBad(bad + 1)}/> */}\n\n\n      <h1>statistics</h1>\n      <Statistics stats={statistics}/>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}