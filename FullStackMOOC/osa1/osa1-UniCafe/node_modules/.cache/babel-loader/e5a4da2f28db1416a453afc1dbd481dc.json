{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaska\\\\ProgrammingStuff\\\\TestMOOCThings\\\\osa1.6 -1.12\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Statistics = props => {\n  if (props.stats.sum === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Feedback given\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: props.good.text,\n        value: props.good.count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: props.neutral.text,\n        value: props.neutral.count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: props.bad.text,\n        value: props.bad.count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: props.all.text,\n        value: props.all.count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: props.average.text,\n        value: props.average.count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: props.positive.text,\n        value: props.positive.count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c = Statistics;\n\nconst StatisticLine = ({\n  text,\n  value\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [text, \" \", value]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = StatisticLine;\n\nconst Sum = props => {\n  let sum = 0;\n\n  for (let i = 0; i < props.length; i++) {\n    sum += props[i];\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: sum\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}; // return (\n//   <div>\n//     <tr>\n//       <td>Hi, I'm your first cell.</td>\n//       <td>I'm your second cell.</td>\n//       <td>I'm your third cell.</td>\n//       <td>I'm your fourth cell.</td>\n//     </tr>\n//   </div>\n// )\n\n\n_c3 = Sum;\n\nconst App = () => {\n  _s();\n\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  let statistics = {\n    good: [{\n      text: 'good',\n      count: good\n    }],\n    neutral: [{\n      text: 'neutral',\n      count: neutral\n    }],\n    bad: [{\n      text: 'bad',\n      count: bad\n    }],\n    all: [{\n      text: 'all',\n      count: Sum([] = {\n        good,\n        neutral,\n        bad\n      })\n    }],\n    average: [{\n      text: 'average',\n      count: (good - bad) / (good + bad + neutral)\n    }],\n    positive: [{\n      text: 'positive',\n      count: good / (good + bad + neutral)\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setGood(good + 1),\n      children: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setNeutral(neutral + 1),\n      children: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setBad(bad + 1),\n      children: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      stats: statistics\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Statistics\");\n$RefreshReg$(_c2, \"StatisticLine\");\n$RefreshReg$(_c3, \"Sum\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["C:/Users/jaska/ProgrammingStuff/TestMOOCThings/osa1.6 -1.12/src/App.js"],"names":["React","useState","Statistics","props","stats","sum","good","text","count","neutral","bad","all","average","positive","StatisticLine","value","Sum","i","length","App","setGood","setNeutral","setBad","statistics"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nconst Statistics = (props) => {\n  if (props.stats.sum === 0) {\n    return (\n      <div>\n        <p>No Feedback given</p>\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        <StatisticLine text={props.good.text} value={props.good.count}/>\n        <StatisticLine text={props.neutral.text} value={props.neutral.count}/>\n        <StatisticLine text={props.bad.text} value={props.bad.count}/>\n        <StatisticLine text={props.all.text} value={props.all.count}/>\n        <StatisticLine text={props.average.text} value={props.average.count}/>\n        <StatisticLine text={props.positive.text} value={props.positive.count}/>\n      </div>\n    )\n  }\n}\n\nconst StatisticLine = ({text, value}) => {\n  return (\n    <div>\n      <p>{text} {value}</p>\n    </div>\n  )\n}\nconst Sum = (props) => {\n  let sum = 0;\n  for (let i = 0; i < props.length; i++) {\n      sum += props[i];\n    }\n  return (\n    <p>{sum}</p>\n  )\n}\n\n  // return (\n  //   <div>\n  //     <tr>\n  //       <td>Hi, I'm your first cell.</td>\n  //       <td>I'm your second cell.</td>\n  //       <td>I'm your third cell.</td>\n  //       <td>I'm your fourth cell.</td>\n  //     </tr>\n  //   </div>\n  // )\nconst App = () => {\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  let statistics = {\n    good: [\n      {\n        text: 'good',\n        count: good\n      }\n    ],\n    neutral: [\n      {\n        text: 'neutral',\n        count: neutral\n      }\n    ],\n    bad: [\n      {\n        text: 'bad',\n        count: bad\n      }\n    ],\n    all: [\n      {\n        text: 'all',\n        count: Sum([] = {good, neutral, bad})\n      }\n    ],\n    average: [\n      {\n        text: 'average',\n        count: (good - bad) / (good + bad + neutral)\n      }\n    ],\n    positive: [\n      {\n        text: 'positive',\n        count: good / (good + bad + neutral)\n      }\n    ]\n  }\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <button onClick={() => setGood(good + 1)}>good</button>\n      <button onClick={() => setNeutral(neutral + 1)}>neutral</button>\n      <button onClick={() => setBad(bad + 1)}>bad</button>\n\n\n      <h1>statistics</h1>\n      <Statistics stats={statistics}/>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}