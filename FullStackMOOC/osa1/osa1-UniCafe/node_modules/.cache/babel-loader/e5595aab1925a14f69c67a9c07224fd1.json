{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaska\\\\ProgrammingStuff\\\\TestMOOCThings\\\\osa1.6 -1.12\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Statistics = props => {\n  if (props.stats.all === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Feedback given\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"good\",\n        value: props.stats[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"neutral\",\n        value: props.stats[1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"bad\",\n        value: props.stats[2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"all\",\n        value: props.stats[3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"average\",\n        value: props.stats[4]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"positive\",\n        value: props.stats[5]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c = Statistics;\n\nconst StatisticLine = props => {\n  if (props.text != \"positive\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [props.text, \" \", props.value]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [props.text, \" \", props.value * 100, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n}; // return (\n//   <div>\n//     <tr>\n//       <td>Hi, I'm your first cell.</td>\n//       <td>I'm your second cell.</td>\n//       <td>I'm your third cell.</td>\n//       <td>I'm your fourth cell.</td>\n//     </tr>\n//   </div>\n// )\n\n\n_c2 = StatisticLine;\n\nconst App = () => {\n  _s();\n\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const all = good + neutral + bad;\n  const average = good - bad / (good + neutral + bad);\n  const positive = good / (good + neutral + bad);\n  const statistics = [good, neutral, bad, all, average, positive];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setGood(good + 1),\n      children: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setNeutral(neutral + 1),\n      children: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setBad(bad + 1),\n      children: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      stats: statistics\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Statistics\");\n$RefreshReg$(_c2, \"StatisticLine\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["C:/Users/jaska/ProgrammingStuff/TestMOOCThings/osa1.6 -1.12/src/App.js"],"names":["React","useState","Statistics","props","stats","all","StatisticLine","text","value","App","good","setGood","neutral","setNeutral","bad","setBad","average","positive","statistics"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nconst Statistics = (props) => {\n  if (props.stats.all === 0) {\n    return (\n      <div>\n        <p>No Feedback given</p>\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        <StatisticLine text={\"good\"} value={props.stats[0]}/>\n        <StatisticLine text={\"neutral\"} value={props.stats[1]}/>\n        <StatisticLine text={\"bad\"} value={props.stats[2]}/>\n        <StatisticLine text={\"all\"} value={props.stats[3]}/>\n        <StatisticLine text={\"average\"} value={props.stats[4]}/>\n        <StatisticLine text={\"positive\"} value={props.stats[5]}/>\n      </div>\n    )\n  }\n}\n\nconst StatisticLine = (props) => {\n  if (props.text != \"positive\") {\n    return (\n      <div>\n        <p>{props.text} {props.value}</p>\n      </div>\n    )\n  }\n  else {\n    return (\n      <div>\n        <p>{props.text} {props.value * 100}%</p>\n      </div>\n    )\n  }\n}\n\n  // return (\n  //   <div>\n  //     <tr>\n  //       <td>Hi, I'm your first cell.</td>\n  //       <td>I'm your second cell.</td>\n  //       <td>I'm your third cell.</td>\n  //       <td>I'm your fourth cell.</td>\n  //     </tr>\n  //   </div>\n  // )\nconst App = () => {\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const all = good + neutral + bad\n  const average = good - bad / (good + neutral + bad)\n  const positive = good / (good + neutral + bad)\n  const statistics = [good, neutral, bad , all , average, positive]\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <button onClick={() => setGood(good + 1)}>good</button>\n      <button onClick={() => setNeutral(neutral + 1)}>neutral</button>\n      <button onClick={() => setBad(bad + 1)}>bad</button>\n\n\n      <h1>statistics</h1>\n      <Statistics stats={statistics}/>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}