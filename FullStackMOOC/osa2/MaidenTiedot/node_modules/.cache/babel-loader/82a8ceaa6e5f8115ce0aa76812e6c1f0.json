{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaska\\\\ProgrammingStuff\\\\TestMOOCThings\\\\osa2maidentiedot\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Filter = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" Find countries:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: props.newFilter,\n      onChange: props.HandleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Filter;\n\nconst Country = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Country;\n\nconst Countries = props => {\n  //  .map(country =>\n  //           <Country key={country.name.common} name={country.name.common}\n  //           />\n  //         )\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.countriesToShow.reduce((result, item) => {\n      result++;\n      console.log(item.name);\n      return result;\n    }, 0)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Countries;\n\nconst App = () => {\n  _s();\n\n  //   const [ persons, setPersons] = useState([]) \n  const [newFilter, setNewFilter] = useState('');\n  const [newCountries, setNewCountries] = useState([]);\n  useEffect(() => {\n    axios.get('https://restcountries.com/v3.1/all').then(response => {\n      setNewCountries(response.data);\n    });\n  }, []);\n\n  const HandleFilterChange = event => {\n    setNewFilter(event.target.value);\n  };\n\n  const countriesToShow = newFilter === '' ? newCountries : newCountries.filter(country => country.name.common.toLowerCase().includes(newFilter.toLowerCase()));\n  var nameCount = 0;\n  duplicates = persons.reduce((result, item) => {\n    result++;\n    console.log(item.name);\n    return result;\n  }, 0);\n\n  if (duplicates !== 0) {\n    window.alert(`${newName} is already added to phonebook`);\n  } else {\n    setPersons(persons.concat(nameObject));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Filter, {\n      newFilter: newFilter,\n      HandleFilterChange: HandleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Countries, {\n      countriesToShow: countriesToShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"H0liym4Qi6NIZju2xlsa2aaGghI=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Filter\");\n$RefreshReg$(_c2, \"Country\");\n$RefreshReg$(_c3, \"Countries\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["C:/Users/jaska/ProgrammingStuff/TestMOOCThings/osa2maidentiedot/src/App.js"],"names":["React","useState","useEffect","axios","Filter","props","newFilter","HandleFilterChange","Country","name","Countries","countriesToShow","reduce","result","item","console","log","App","setNewFilter","newCountries","setNewCountries","get","then","response","data","event","target","value","filter","country","common","toLowerCase","includes","nameCount","duplicates","persons","window","alert","newName","setPersons","concat","nameObject"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\n\n\n\nconst Filter = (props) => {\n  return (\n    <div> Find countries:\n      <input value={props.newFilter}\n      onChange={props.HandleFilterChange}\n      />\n    </div>\n    )\n}\nconst Country = (props) => {\n  return (\n    <div>\n      <p>{props.name}</p>\n    </div>\n  )\n}\nconst Countries = (props) => {\n  //  .map(country =>\n  //           <Country key={country.name.common} name={country.name.common}\n  //           />\n  //         )\n  return(\n    <div>\n          {props.countriesToShow.reduce((result, item) => {\n              result++;\n              console.log(item.name);\n              return result\n              }, 0)\n          } \n      </div>\n    )\n}\n\nconst App = () => {\n//   const [ persons, setPersons] = useState([]) \n  const [newFilter, setNewFilter] = useState('')\n  const [newCountries, setNewCountries] = useState([])\n\n  useEffect(() => {\n  axios\n    .get('https://restcountries.com/v3.1/all')\n    .then(response => {\n      setNewCountries(response.data)\n    })\n  }, [])\n\n  const HandleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const countriesToShow = newFilter === ''\n    ? newCountries\n    : newCountries.filter(country => country.name.common\n      .toLowerCase()\n      .includes(newFilter.toLowerCase()))\n  \n  var nameCount = 0\n    duplicates = persons.reduce((result, item) => {\n      result++;\n      console.log(item.name);\n      return result\n    }, 0)\n    if (duplicates !== 0) {\n      window.alert(`${newName} is already added to phonebook`)\n    } else {\n      setPersons(persons.concat(nameObject))\n  }\n  \n  return (\n    <div>\n      <Filter newFilter={newFilter} HandleFilterChange={HandleFilterChange} />\n      <Countries countriesToShow={countriesToShow} />\n    </div>\n  )\n}\nexport default App\n"]},"metadata":{},"sourceType":"module"}